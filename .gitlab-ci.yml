---
stages:
  - build
  - dockerbuild
  - publish
  - deploy

build:eventservice:
  image: golang:1.11.3
  stage: build
  before_script:
    - curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh    
    - mkdir -p $GOPATH/src/todo.com
    - ln -nfs $PWD $GOPATH/src/todo.com/golang-my-events-example
    - cd $GOPATH/src/todo.com/golang-my-events-example
    - dep ensure
  script:
    - cd ./events-service && CGO_ENABLED=0 go build
  artifacts:
    paths:
      - ./events-service/events-service

dockerbuild:eventservice:
  image: docker:17.04.0-ce
  stage: dockerbuild
  dependencies:
    - build:eventservice
  script:
    - docker image build -t maxsuelmarinho/my-events:events-service-${CI_COMMIT_REF_NAME} events-service

publish:eventservice:
  image: docker:17.04.0-ce
  stage: publish
  dependencies:
    - dockerbuild:eventservice
  before_script:
    - echo "DOCKER_USERNAME: $DOCKER_USERNAME"
    - echo "DOCKER_PASSWORD: $DOCKER_PASSWORD"
    - docker login --username $DOCKER_USERNAME --password $DOCKER_PASSWORD
  script:
    - docker push maxsuelmarinho/my-events:events-service-${CI_COMMIT_REF_NAME}
  only:
    - tags

deploy:eventservice:
  image: alpine:3.5
  stage: deploy
  dependencies:
    - publish:eventservice
  environment: production
  before_script:
    - echo "KUBE_CA_CERT: $KUBE_CA_CERT"
    - echo "KUBE_TOKEN: $KUBE_TOKEN"
    - echo "KUBE_CLUSTER: $KUBE_CLUSTER"
    - echo "KUBE_SERVER: $KUBE_SERVER"
    - apk add --update openssl curl
    - version=$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt); wget -O /usr/local/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/${version}/bin/linux/amd64/kubectl && chmod +x /usr/local/bin/kubectl
    - echo "${KUBE_CA_CERT}" > ./ca.crt
    - kubectl config set-credentials gitlab-ci --token="${KUBE_TOKEN}"
    - kubectl config set-cluster "${KUBE_CLUSTER}" --server="${KUBE_SERVER}" --certificate-authority=ca.crt
    - kubectl config set-context "${KUBE_CLUSTER}" --cluster="${KUBE_CLUSTER}" --user=gitlab-ci --namespace=default
    - kubectl config use-context "${KUBE_CLUSTER}"
  script:
    - kubectl set image deployment/events-service api=maxsuelmarinho/my-events:events-service-${CI_COMMIT_REF_NAME}
  only:
    - tags

build:bookingservice:
  image: golang:1.11.3
  stage: build
  before_script:
    - curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh    
    - mkdir -p $GOPATH/src/todo.com
    - ln -nfs $PWD $GOPATH/src/todo.com/golang-my-events-example
    - cd $GOPATH/src/todo.com/golang-my-events-example
    - dep ensure
  script:
    - cd ./booking-service && CGO_ENABLED=0 go build
  artifacts:
    paths:
      - ./booking-service/booking-service

dockerbuild:bookingservice:
  image: docker:17.04.0-ce
  stage: dockerbuild
  dependencies:
    - build:bookingservice
  script:
    - docker image build -t maxsuelmarinho/my-events:booking-service-$CI_COMMIT_REF_NAME booking-service   

publish:bookingservice:
  image: docker:17.04.0-ce
  stage: publish
  dependencies:
    - dockerbuild:bookingservice
  before_script:
    - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
  script:
    - docker push maxsuelmarinho/my-events:booking-service-${CI_COMMIT_REF_NAME}
  only:
    - tags